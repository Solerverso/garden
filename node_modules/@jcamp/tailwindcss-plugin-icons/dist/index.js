"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _nodechild_process = require("node:child_process");
var _nodepath = require("node:path");
var _nodebuffer = require("node:buffer");
var _plugin = /*#__PURE__*/ _interop_require_default(require("tailwindcss/plugin"));
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function createPluginIcons() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var getCSS = function getCSS(value, mode) {
        var options64 = _nodebuffer.Buffer.from(JSON.stringify(options)).toString("base64");
        var _spawnSync = (0, _nodechild_process.spawnSync)("node", [
            (0, _nodepath.resolve)(__dirname, "./worker"),
            value,
            mode,
            options64
        ]), stderr = _spawnSync.stderr, stdout = _spawnSync.stdout;
        var svg = String(stdout);
        var err = String(stderr);
        if (err) {
            var _options_warn;
            if ((_options_warn = options.warn) !== null && _options_warn !== void 0 ? _options_warn : false) console.error("[tw-icons]: ".concat(err));
            return {};
        }
        return JSON.parse(svg);
    };
    return function(param) {
        var matchComponents = param.matchComponents;
        var _prefix = (options.prefix || "i-").replace(/-$/, "");
        var _obj;
        matchComponents((_obj = {}, _define_property(_obj, _prefix, function(value) {
            return getCSS(value, "def");
        }), _define_property(_obj, "".concat(_prefix, "-bg"), function(value) {
            return getCSS(value, "bg");
        }), _define_property(_obj, "".concat(_prefix, "-auto"), function(value) {
            return getCSS(value, "auto");
        }), _define_property(_obj, "".concat(_prefix, "-mask"), function(value) {
            return getCSS(value, "mask");
        }), _obj));
    };
}
var _default = _plugin.default.withOptions(function(options) {
    return createPluginIcons(options);
});
