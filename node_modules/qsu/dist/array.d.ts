import type { NumberValueObject, PositiveNumber } from './types/global.js';
export declare function arrShuffle(array: any[]): any[];
export declare function arrWithDefault(defaultValue: any, length?: number): any[];
export declare function arrUnique(array: any[]): any[];
export declare function arrWithNumber(start: number, end: number): number[];
export declare function average(array: number[]): number;
export declare function arrMove<N extends number>(array: any[], from: PositiveNumber<N>, to: PositiveNumber<N>): any[];
export declare function arrTo1dArray(array: any[]): any[];
export declare function arrRepeat<N extends number>(array: any, count: PositiveNumber<N>): any[];
export declare function arrCount(array: string[] | number[]): NumberValueObject;
export declare function sortByObjectKey(array: any[], key: string, descending?: boolean, numerically?: boolean): any[];
export declare function sortNumeric(array: string[], descending?: boolean): string[];
export declare function arrGroupByMaxCount(array: any[], maxLengthPerGroup?: number): any[];
