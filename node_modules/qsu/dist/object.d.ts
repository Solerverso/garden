import type { AnyValueObject } from './types/global.js';
export declare function objToQueryString(obj: AnyValueObject): string;
export declare function objFindItemRecursiveByKey(obj: AnyValueObject | any[], searchKey: string, searchValue: any, childKey: string): AnyValueObject | null;
export declare function objToPrettyStr(obj: AnyValueObject): string;
export declare function objToArray(obj: AnyValueObject, recursive?: boolean): any[];
export declare function objTo1d(obj: AnyValueObject, separator?: string): AnyValueObject;
export declare function objDeleteKeyByValue(obj: AnyValueObject, searchValue: string | number | null | undefined, recursive?: boolean): AnyValueObject | null;
export declare function objUpdate(obj: AnyValueObject, key: string, value: any, recursive?: boolean, upsert?: boolean): AnyValueObject | null;
export declare function objMergeNewKey(obj: AnyValueObject, obj2: AnyValueObject, options?: {
    arrayAction?: 'original' | 'replace' | 'append';
}): AnyValueObject | null;
