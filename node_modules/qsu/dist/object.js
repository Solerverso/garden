import{isEmpty as e,isObject as t}from"./verify.js";export function objToQueryString(e){return Object.keys(e).map((t=>{let r=e[t];return"object"==typeof r&&(r=JSON.stringify(r)),`${encodeURIComponent(t)}=${encodeURIComponent(r)}`})).join("&")}export function objFindItemRecursiveByKey(t,r,n,o){const c=t=>{let s;s="object"==typeof t&&Array.isArray(t)?t:[t];for(let t=0,l=s.length;t<l;t+=1){if(s[t][r]===n)return s[t];if(!e(s[t][o])){const e=c(s[t][o]);if(e)return e}}return null};return c(t)}export function objToPrettyStr(e){return JSON.stringify(e,null,"\t")}export function objToArray(e,r=!1){const n=e=>{const o=[],c=Object.keys(e).length;for(let s=0;s<c;s+=1){const c=Object.keys(e)[s];r&&t(e[c])?o.push([c,n(e[c])]):o.push([c,e[c]])}return o};return n(e)}export function objTo1d(e,r="."){if(!r||r.length<1)throw new Error("`separator` must have value at least 1 character.");const n=(e,o="")=>{let c={};const s=Object.keys(e).length,l=o.length<1;for(let u=0;u<s;u+=1){const s=Object.keys(e)[u],y=e[s],i=`${o}${l?"":r}${s}`;t(y)?(c=Object.assign(c,n(y,i)),delete c[s]):c[i]=y}return c};return n(e)}export function objDeleteKeyByValue(e,r,n=!1){if(!e||"object"!=typeof e)return null;const o=Object.assign(e,{});for(let e=Object.keys(o).length;e>=0;e-=1){const c=Object.keys(o)[e];n&&o[c]&&t(o[c])?objDeleteKeyByValue(o[c],r,n):o[c]===r&&delete o[c]}return o}export function objUpdate(e,r,n,o=!1,c=!1){if(!e||"object"!=typeof e)return null;const s=Object.assign(e,{});let l=!1;const u=e=>{for(let c=0;c<Object.keys(e).length;c+=1){const s=Object.keys(e)[c];o&&e[s]&&t(e[s])&&u(e[s]),Object.hasOwn(e,r)&&(e[r]=n,l=!0)}};return u(s),!l&&c&&(s[r]=n),s}export function objMergeNewKey(e,r,n){if(!e||"object"!=typeof e||!r||"object"!=typeof r)return null;const o={...e};return Object.keys(r).forEach((e=>{const c=r[e];if(Object.hasOwn(o,e))if(Array.isArray(o[e])&&Array.isArray(c)){if("append"===n?.arrayAction)o[e].push(...c);else if("replace"===n?.arrayAction)o[e]=c;else if(o[e].length===c.length)for(let r=0;r<o[e].length;r+=1){const s=c[r];t(s)&&(o[e][r]=objMergeNewKey(o[e][r],s,n))}}else t(o[e])&&t(c)?o[e]=objMergeNewKey(o[e],c,n):o[e]=c;else o[e]=c})),o}