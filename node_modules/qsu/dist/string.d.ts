import type { PositiveNumber } from './types/global.js';
export declare function trim(str?: string | null): string | null;
export declare function removeSpecialChar(str: string, exceptionCharacters?: string): string;
export declare function replaceBetween(str: string, startChar: string, endChar: string, replaceWith?: string): string;
export declare function removeNewLine(str: string, replaceTo?: string): string;
export declare function capitalizeFirst(str: string): string;
export declare function capitalizeEverySentence(str: string, splitChar?: string): string;
export declare function capitalizeEachWords(str: string, natural?: boolean): string;
export declare function strCount(str: string, search: string): number;
export declare function strShuffle(str: string): string;
export declare function strRandom<N extends number>(length: PositiveNumber<N>, additionalCharacters?: string): string;
export declare function strBlindRandom<N extends number>(str: string, blindLength: PositiveNumber<N>, blindStr?: string): string;
export declare function truncate<N extends number>(str: string, length: PositiveNumber<N>, ellipsis?: string): string;
export declare function truncateExpect<N extends number>(str: string, expectLength: PositiveNumber<N>, endStringChar?: string): string;
export declare function split(str: string, ...splitter: any[]): string[];
export declare function split(str: string, ...splitter: Array<string>): string[];
export declare function strToAscii(str: string): number[];
export declare function strUnique(str: string): string;
export declare function urlJoin(...args: any[]): string;
